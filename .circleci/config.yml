version: 2

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test-unit:
          requires:
            - build
      - test-security:
          requires:
            - build      
      - test-products:
          requires:
            - build
      - test-users:
          requires:
            - build

defaults: &defaults
  working_directory: /bilemo
  docker:
    - image: php:7.2.8-fpm-alpine

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install system packages
          command: apk add --no-cache --virtual .build-deps $PHPIZE_DEPS zlib-dev
      - run:
          name: Install PHP extensions
          command: docker-php-ext-install zip
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === '93b54496392c062774670ac18b134c3b3a95e5a5e5c8f1a9f115f203b75bf9a129d5daa8ba6a13e2cc8a1da0806388a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          name: Display PHP information
          command: |
            php -v
            php composer.phar --version
      - restore_cache: # special step to restore the dependency cache if `composer.json` does not change
          keys:
            - composer-v1-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run:
          name: Install project dependencies
          command: |
            php composer.phar install -n --optimize-autoloader --classmap-authoritative
            php composer.phar dump-autoload --optimize --classmap-authoritative
      - save_cache: # special step to save the dependency cache with the `composer.json` cache key template
          key: composer-v1-{{ checksum "composer.json" }}
          paths:
            - vendor
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  test-unit:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install system packages
          command: apk add --no-cache --virtual .build-deps $PHPIZE_DEPS zlib-dev
      - run:
          name: Install PHP extensions
          command: docker-php-ext-install zip
      - run:
          name: Create test database
          command: |
            php bin/console doctrine:database:create --env=test
            php bin/console doctrine:schema:update --force --env=test
      - run:
          name: Run unit tests
          command: php ./bin/phpunit
  
  test-security:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install system packages
          command: apk add --no-cache --virtual .build-deps $PHPIZE_DEPS zlib-dev
      - run:
          name: Install PHP extensions
          command: docker-php-ext-install zip
      - run:
          name: Create test database
          command: |
            php bin/console doctrine:database:create --env=test
            php bin/console doctrine:schema:update --force --env=test
      - run:
          name: Run functional tests
          command: vendor/bin/behat features/security.feature
  
  test-products:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install system packages
          command: apk add --no-cache --virtual .build-deps $PHPIZE_DEPS zlib-dev
      - run:
          name: Install PHP extensions
          command: docker-php-ext-install zip
      - run:
          name: Create test database
          command: |
            php bin/console doctrine:database:create --env=test
            php bin/console doctrine:schema:update --force --env=test
      - run:
          name: Run functional tests
          command: vendor/bin/behat features/products.feature

  test-users:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install system packages
          command: apk add --no-cache --virtual .build-deps $PHPIZE_DEPS zlib-dev
      - run:
          name: Install PHP extensions
          command: docker-php-ext-install zip
      - run:
          name: Create test database
          command: |
            php bin/console doctrine:database:create --env=test
            php bin/console doctrine:schema:update --force --env=test
      - run:
          name: Run functional tests
          command: vendor/bin/behat features/users.feature            
